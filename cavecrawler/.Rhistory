Warren2021 <- read.csv("41467_2021_21733_MOESM4_ESM.csv")
# Create dataframe into which QTL data should be read
QTL <- data.frame()
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"QTL_Significance_Thresholds",	"Study_Specific_Information",
"Publication")
# Create dataframe into which QTL data should be read
QTL <- data.frame(matrix(nrow = 0, ncol = 12))
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"QTL_Significance_Thresholds",	"Study_Specific_Information",
"Publication")
View(QTL)
View(Warren2021)
# Read in "Supplemental Data 1" from Warren et al 2021
Warren2021 <- read.csv("41467_2021_21733_MOESM4_ESM.csv", skip = 1)
!is.na(Warren2021$Protas_et_al.2008)
ncol(Warren2021)
# Remove all markers for which there exist NO QTL for ANY studies as well as the
# columns which are wholly NA
Warren2021 <- Warren2021[!is.na(Warren2021$Protas_et_al.2008) &
!is.na(Warren2021$Protas_et_al.2007) &
!is.na(Warren2021$Yoshizawa.et.al.2012) &
!is.na(Warren2021$Yoshizawa.et.al.2015) &
!is.na(Warren2021$Kowalko.et.al.2013.PNAS) &
!is.na(Warren2021$Kowalko.et.al.2013.CurrentBiology) &
!is.na(Warren2021$O.Quin.et.al.2012), -24:28]
-24:28
-c(24:28)
# Remove all markers for which there exist NO QTL for ANY studies as well as the
# columns which are wholly NA
Warren2021 <- Warren2021[!is.na(Warren2021$Protas_et_al.2008) &
!is.na(Warren2021$Protas_et_al.2007) &
!is.na(Warren2021$Yoshizawa.et.al.2012) &
!is.na(Warren2021$Yoshizawa.et.al.2015) &
!is.na(Warren2021$Kowalko.et.al.2013.PNAS) &
!is.na(Warren2021$Kowalko.et.al.2013.CurrentBiology) &
!is.na(Warren2021$O.Quin.et.al.2012), -c(24:28)]
# Read in "Supplemental Data 1" from Warren et al 2021
Warren2021 <- read.csv("41467_2021_21733_MOESM4_ESM.csv", skip = 1)
# Remove all markers for which there exist NO QTL for ANY studies as well as the
# columns which are wholly NA
Warren2021 <- Warren2021[!is.na(Warren2021$Protas_et_al.2008) |
!is.na(Warren2021$Protas_et_al.2007) |
!is.na(Warren2021$Yoshizawa.et.al.2012) |
!is.na(Warren2021$Yoshizawa.et.al.2015) |
!is.na(Warren2021$Kowalko.et.al.2013.PNAS) |
!is.na(Warren2021$Kowalko.et.al.2013.CurrentBiology) |
!is.na(Warren2021$O.Quin.et.al.2012), -c(24:28)]
colnames(Warren2021)
colnames(Warren2021)[14:20]
# Create a table describing the crosses for each study
CrossKey <- data.frame(
Publication = colnames(Warren2021)[14:20],
Cross = c(rep("Pachon x Surface F2", 2),
rep("Pachon x Texas Surface F2 and F3", 2), NA,
"Tinaja x Surface F2", "Pachon x Texas Surface F2 and F3")
)
CrossKey
levels(as.factor(Warren[,14:20]))
levels(as.factor(Warren2021[,14:20]))
All_QTs <- Warren2021[,14:20]
All_QTs
as.vector(Warren2021[,14:20])
# Create a table describing the Quantiative Traits for each study
Protas2007_QTs <- Warren2021$Protas_et_al.2007
Protas2007_QTs
Protas2007_QTs <- Warren2021$Protas_et_al.2007[!is.na(Warren2021$Protas_et_al.2007)]
Protas2007_QTs
study = 14
Warren2021[, study]
grepl(",", Warren2021[, study])
# Create a table describing the Quantitative Traits for each study
All_QTs <- c()
for(study in 14:20){
All_QTs <- append(All_QTs, Warren2021[
!is.na(Warren2021[, study]) & !grepl(",", Warren2021[, study]), study])
}
All_QTs <- levels(as.factor(All_QTs))
All_QTs
# Create a table describing the Quantitative Traits for each study
All_QTs <- c()
for(study in 14:20){
All_QTs <- append(All_QTs, Warren2021[
!is.na(Warren2021[, study]) & !grepl(",", Warren2021[, study]) &
!grepl(".", Warren2021[, study]), study])
}
All_QTs <- levels(as.factor(All_QTs))
All_QTs
# Create a table describing the Quantitative Traits for each study
All_QTs <- c()
for(study in 14:20){
All_QTs <- append(All_QTs, Warren2021[
!is.na(Warren2021[, study]) & !grepl(",", Warren2021[, study]), study])
}
All_QTs <- levels(as.factor(All_QTs))
All_QTs
# Exclude the quantitative Trait names which are messed up
All_QTs <- All_QTs[-c(1,4:5,7:8,12:13,16,27,40)]
All_QTs
colnames(QTL)
# Create a table describing the crosses and study-specific information for each
# study
Key <- data.frame(
Publication = colnames(Warren2021)[14:20],
Cross = c(rep("Pachon x Surface F2", 2),
rep("Pachon x Texas Surface F2 and F3",2), NA, "Tinaja x Surface F2",
"Pachon x Texas Surface F2"),
Study_Specific_Information = c(
rep(NA, 2),
rep("In this study, quantitative traits were measured in both F2 and F3 fish"), 2),
rep(NA, 3)
)
# Create a table describing the crosses and study-specific information for each
# study
Key <- data.frame(
)
# Create a table describing the crosses and study-specific information for each
# study
Key <- data.frame(
Publication = colnames(Warren2021)[14:20],
Cross = c(rep("Pachon x Surface F2", 2),
rep("Pachon x Texas Surface F2 and F3",2), NA, "Tinaja x Surface F2",
"Pachon x Texas Surface F2"),
Study_Specific_Information = c(
rep(NA, 2),
rep("In this study, quantitative traits were measured in both F2 and F3 fish", 2),
rep(NA, 3))
)
View(Key)
# 07-06-2022
# Annabel Perry
# This script organizes data from Warren et al 2021 into a QTL data file for
# CaveCrawler
setwd("~/Summer 2022/CaveCrawler Maintenance/QTL")
# Read in "Supplemental Data 1" from Warren et al 2021
Warren2021 <- read.csv("41467_2021_21733_MOESM4_ESM.csv", skip = 1)
# Remove all markers for which there exist NO QTL for ANY studies as well as the
# columns which are wholly NA
Warren2021 <- Warren2021[!is.na(Warren2021$Protas_et_al.2008) |
!is.na(Warren2021$Protas_et_al.2007) |
!is.na(Warren2021$Yoshizawa.et.al.2012) |
!is.na(Warren2021$Yoshizawa.et.al.2015) |
!is.na(Warren2021$Kowalko.et.al.2013.PNAS) |
!is.na(Warren2021$Kowalko.et.al.2013.CurrentBiology) |
!is.na(Warren2021$O.Quin.et.al.2012), -c(24:28)]
# Create a table describing the crosses and study-specific information for each
# study
Key <- data.frame(
Publication = colnames(Warren2021)[14:20],
Cross = c(rep("Pachon x Surface F2", 2),
rep("Pachon x Texas Surface F2 and F3",2), NA, "Tinaja x Surface F2",
"Pachon x Texas Surface F2"),
Study_Specific_Information = c(
rep(NA, 2),
rep("In this study, quantitative traits were measured in both F2 and F3 fish", 2),
rep(NA, 3))
)
# Create dataframe into which QTL data should be read
QTL <- data.frame(matrix(nrow = 0, ncol = 11))
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"Study_Specific_Information", "Publication")
QTL
study
Warren2021[row,study]
row()
r = 1
Warren2021[r,study]
study = 15
Warren2021[r,study]
study = 14
r = 5
temp_df <- data.frame(matrix(nrow = 0, ncol = 11))
colnames(temp_df) <- colnames(QTL)
colnames(temp_df)
# Create matrix into which QTL data should be read
QTL <- matrix(nrow = 0, ncol = 11)
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"Study_Specific_Information", "Publication")
QTL
temp_row <- rep(NA, 11)
Warren2021$Marker.ID[r]
colnames(Warren2021)
colnames(Warren2021)[study]
QTL <- append(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
QTL <- append(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
# Create matrix into which QTL data should be read
QTL <- matrix(nrow = 0, ncol = 11)
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"Study_Specific_Information", "Publication")
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
# Create matrix into which QTL data should be read
QTL <- matrix(nrow = 0, ncol = 11)
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"Study_Specific_Information", "Publication")
r = 5
Warren2021[r,study]
grepl(",", Warren2021[r,study])
str_count("great", "g")
str_count("great", "g")
# 07-06-2022
# Annabel Perry
# This script organizes data from Warren et al 2021 into a QTL data file for
# CaveCrawler
library(stringr)
# 07-06-2022
# Annabel Perry
# This script organizes data from Warren et al 2021 into a QTL data file for
# CaveCrawler
library(stringr)
str_count("great", "g")
QTL
# Create new row in QTL matrix with current marker + publication combo
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
# Check if the current marker has multiple QTL for this study and add as
# many additional rows as there are additional QTL
if(grepl(",", Warren2021[r,study])){
for(i in 1:str_count(Warren2021[r,study], ",")){
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
}
}
QTL
grepl(".", Warren2021[r,study])
r = 9
Warren2021[r,study]
"." %in% Warren2021[r,study]
str_count(Warren2021[r,study], ".")
str_count(Warren2021[r,study], '\\.')
grepl('\\.', Warren2021[r,study]
)
r = 5
grepl('\\.', Warren2021[r,study]
)
# Create vector of both possible separators to later loop through
seps <- c(",", '\\.')
seps
s = 2
grepl(seps[s], Warren2021[r,study]
)
r = 9
Warren2021[r,study]
grepl(seps[s], Warren2021[r,study])
QTL
# Create new row in QTL matrix with current marker + publication combo
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
QTL
Warren2021[r,study]
for(i in 1:str_count(Warren2021[r,study], seps[s])){
QTL <- rbind(QTL, c(Warren2021$Marker.ID[r], rep(NA, 9),
colnames(Warren2021)[study]))
}
QTL
# 07-06-2022
# Annabel Perry
# This script organizes data from Warren et al 2021 into a QTL data file for
# CaveCrawler
library(stringr)
setwd("~/Summer 2022/CaveCrawler Maintenance/QTL")
# Read in "Supplemental Data 1" from Warren et al 2021
Warren2021 <- read.csv("41467_2021_21733_MOESM4_ESM.csv", skip = 1)
# Remove all markers for which there exist NO QTL for ANY studies as well as the
# columns which are wholly NA
Warren2021 <- Warren2021[!is.na(Warren2021$Protas_et_al.2008) |
!is.na(Warren2021$Protas_et_al.2007) |
!is.na(Warren2021$Yoshizawa.et.al.2012) |
!is.na(Warren2021$Yoshizawa.et.al.2015) |
!is.na(Warren2021$Kowalko.et.al.2013.PNAS) |
!is.na(Warren2021$Kowalko.et.al.2013.CurrentBiology) |
!is.na(Warren2021$O.Quin.et.al.2012), -c(24:28)]
# Create a table describing the crosses and study-specific information for each
# study
Key <- data.frame(
Publication = colnames(Warren2021)[14:20],
Cross = c(rep("Pachon x Surface F2", 2),
rep("Pachon x Texas Surface F2 and F3",2), NA, "Tinaja x Surface F2",
"Pachon x Texas Surface F2"),
Study_Specific_Information = c(
rep(NA, 2),
rep("In this study, quantitative traits were measured in both F2 and F3 fish", 2),
rep(NA, 3))
)
# Create matrix into which QTL data should be read
QTL <- matrix(nrow = 0, ncol = 11)
colnames(QTL) <- c("Marker",	"Scaffold",	"Linkage_Group",	"Cross",
"Start_Position_on_Scaffold",	"End_Position_on_Scaffold",
"LOD",	"Quantitative_Trait",	"Percent_Variance_Explained",
"Study_Specific_Information", "Publication")
# Create vector of both possible separators to later loop through
seps <- c(",", '\\.')
QTL
seps
# Iterate through each entry in Warren2021
for(r in 1:nrow(Warren2021)){
# Count how many publications have information for this marker AND how many
# QTL there are per publication and add the appropriate number of rows for
# this marker
for(study in 14:20){
# Check if the current marker has information for the current study
if(!is.na(Warren2021[r,study])){
# Create new row in QTL matrix with...
QTL <- rbind(QTL, c(
# The current marker
Warren2021$Marker.ID[r],
# The scaffold for the current marker
Warren2021$Scaffold.ID[r],
# The linkage group for the current marker
Warren2021$LG[r],
# The fish populations used in the F2 cross for the current study
Key$Cross[Key$Publication == colnames(Warren2021)[study]],
# The start and end positions of the marker on the scaffold
Warren2021$Scaffold.Alignmnet.Start[r],
Warren2021$Scaffold.Alignmnet.End[r],
# Filler NAs for the informartion to be added later
rep(NA, 3),
# Study-specific information for the current publication
Key$Study_Specific_Information[Key$Publication == colnames(Warren2021)[study]],
# The name of the current publication
colnames(Warren2021)[study]))
# Check if the current marker has multiple QTL for this study and add as
# many additional rows as there are additional QTL
for(s in 1:length(seps)){
if(grepl(seps[s], Warren2021[r,study])){
for(i in 1:str_count(Warren2021[r,study], seps[s])){
QTL <- rbind(QTL, c(
# The current marker
Warren2021$Marker.ID[r],
# The scaffold for the current marker
Warren2021$Scaffold.ID[r],
# The linkage group for the current marker
Warren2021$LG[r],
# The fish populations used in the F2 cross for the current study
Key$Cross[Key$Publication == colnames(Warren2021)[study]],
# The start and end positions of the marker on the scaffold
Warren2021$Scaffold.Alignmnet.Start[r],
Warren2021$Scaffold.Alignmnet.End[r],
# Filler NAs for the informartion to be added later
rep(NA, 3),
# Study-specific information for the current publication
Key$Study_Specific_Information[Key$Publication == colnames(Warren2021)[study]],
# The name of the current publication
colnames(Warren2021)[study]))
}
}
}
}
}
}
QTL
# Write the information to QTL.csv
write.csv(QTL, "QTL.csv", row.names = F)
setwd("/Users/knigh/Documents/GitHub/CaveCrawler/QTL_troubleshooting")
library(shiny)
?conditionalPanel
?radioButtons
runApp()
runApp()
runApp()
?sidebarPanel
runApp()
runApp()
runApp()
runApp()
runApp()
?radioButtons
runApp()
shiny::runApp()
setwd("C:\User\")
chr_table <-
QTL <- function(chr_table, position_table, QTL_table,
GR.bool = F, GR.chr = NA, GR.start = NA, GR.end = NA,
MR.bool = F, MR.search_term = NA, MR.bp = NA,
TM.bool = F, TM.QT = NA){
# Vector into which warnings will be appended
QTL.wrnings <- c()
# Dataframe for QTL marker(s) matching the user's search parameters
QTL_Marker_Data <- data.frame()
colnames(QTL_Marker_Data) <- c("Marker (Peak)", "Scaffold",
"Start Position on Scaffold",
"End Position on Scaffold", "LOD (Peak)",
"Quantitative Trait",
"Percent Variance Explained",
"Study-Specific Information", "Publication(s)")
# Dataframe for QTL marker(s) matching the user's search parameters
QTL_Gene_Data <- data.frame()
colnames(QTL_Gene_Data) <- c("Gene", "Scaffold", "Start Locus", "End Locus",
"Publication")
# Object into which plots will be stored (This is currently a placeholder)
chr_plot <- ggplot()
########################### Marker Range Pseudocode ###########################
# TODO MR: Write & troubleshoot code which performs ALL the logic described in
#          the following several lines of comments:
#
#          (Note: the number of lines indicated in the pseudocode does NOT
#          necessarily match the number of lines you'll need for the actual
#          code. I used as many lines as needed to communicate the logic. You
#          may need more or fewer lines depending on how you choose to code)
#
# If MR.bool == T...
#   Check whether MR.search_term occurs within the "Marker (Peak)" column of
#   QTL_table. If so...
#     Use QTL_table to find the chromosome which the marker in MR.search_term
#     occurs on and the position of MR.search_term on this chromosome
#       Set GR.chr equal to this chromosome
#       Set GR.start equal to this position MINUS MR.bp
#       Set GR.end equal to this position PLUS MR.bp
#     Set GR.bool == T
#     Permit code to fall through to the if-statement which checks whether
#     GR.bool == T "
setwd("C:\User")
setwd("C:/Users/knigh/Documents/GitHub/CaveCrawler/cavecrawler/data")
setwd("C:/Users/knigh/Documents/GitHub/CaveCrawler/cavecrawler")
chr_table <- read.csv(file = "ChrTable.csv", fill = F)
chr_table <- read.csv(file = "data/ChrTable.csv", fill = F)
position_table <- read.csv(file = "data/PositionTable.csv", fill = F)
QTL_table <- read.csv(file = "data/QTL.csv", fill = F)
library(chromoMap-shiny)
library("chromoMap-shiny")
install.packages(""chromoMap-shiny"")
install.packages("chromoMap-shiny")
library("chromoMap")
# TODO Copy-and-paste
# Defines a dataframe to store the marker and gene locations to be plotted
plot_annot <- data.frame()
colnames(plot_annot) <- c("Element Name", "Chromosome Name", "Element Start",
"Element End")
plot_annot
colnames(plot_annot) <- c("Element Name", "Chromosome Name", "Element Start",
"Element End")
# TODO Copy-and-paste
# Defines a dataframe to store the marker and gene locations to be plotted
plot_annot <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(plot_annot) <- c("Element Name", "Chromosome Name", "Element Start",
"Element End")
plot_annot
View(plot_annot)
View(QTL_table)
View(QTL_table)
GR.chr = 13
View(position_table)
chr13 <- position_table[position_table$Scaffold == 13,]
chr13
chr13 <- position_table[position_table$Scaffold == 13 & position_table$Start_Locus > 35611239,]
chr13
chr13 <- position_table[position_table$Scaffold == 13 & position_table$Start_Locus > 35611239 & position_table$End_Locus < 35611239,]
chr13
chr13 <- position_table[position_table$Scaffold == 13 & position_table$Start_Locus > 35611239,]
# TODO Remove the chr_plot placeholder
# TODO Copy-and-paste
# Defines a dataframe to store the marker and gene locations to be plotted
plot_annot <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(plot_annot) <- c("Element Name", "Chromosome Name", "Element Start",
"Element End")
# TODO Remove the chr_plot placeholder
# TODO Copy-and-paste
# Defines a dataframe to store the marker and gene locations to be plotted
plot_annot <- data.frame(matrix(nrow = 190, ncol = 4))
colnames(plot_annot) <- c("Element Name", "Chromosome Name", "Element Start",
"Element End")
plot_annot$`Element Name`[1] <- QTL_table$Marker[1]
plot_annot$`Chromosome Name`[1] <- QTL_table$Chromosome[1]
plot_annot$`Element Start`[1] <- QTL_table$Start_Position_on_Chromosome[1]
plot_annot$`Element End`[1] <- QTL_table$End_Position_on_Chromosome[1]
plot_annot
View(chr13)
plot_annot[2:190,] <- chr13[,c(5,1:3)]
View(plot_annot)
# TODO Copy-and-paste this plotting function into the end of the GR code
chr_plot <- chromoMap(ch.files = as.list(chr_table[chr_table$Chromosome == GR.chr,]),
data.files = plot_annot)
# TODO Copy-and-paste this plotting function into the end of the GR code
chr_plot <- chromoMap(ch.files = as.list(chr_table[chr_table$Chromosome == GR.chr,]),
data.files = as.list(plot_annot))
as.list(plot_annot)
?as.list
# TODO Copy-and-paste this plotting function into the end of the GR code
chr_plot <- chromoMap(ch.files = chr_table[chr_table$Chromosome == GR.chr,],
data.files = plot_annot)
chr_table[chr_table$Chromosome == GR.chr,]
plot_annot
# TODO Copy-and-paste this plotting function into the end of the GR code
chr_plot <- chromoMap(ch.files = list(chr_table[chr_table$Chromosome == GR.chr,]),
data.files = list(plot_annot))
chr_plot
plot_annot
test <- plot_annot
plot_annot <- test[1,]
chromoMap(ch.files = list(chr_table[chr_table$Chromosome == GR.chr,]),
data.files = list(plot_annot))
